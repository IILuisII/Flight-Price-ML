import pickle


function loadDataID() {
#Model
rf_prod = RandomForestRegressor()
rf_prod.fit(X, y)

predictions_prod_rf = rf_prod.predict(X)
mse_prod_rf = mean_squared_error(y, predictions_prod_rf)
r2_prod_rf = r2_score(y, predictions_prod_rf)

# save the model to disk
filename = 'ml_rf_fp.sav'
pickle.dump(rf_prod, open(filename, 'wb'))

# load model
my_prod_model = pickle.load(open('ml_rf_fp.sav', 'rb'))

#Inputs
origin_airport = "DFW"
destination_airport = "PHL"

#Get Latitude and Longitude
or_lat = -df.loc[df.Origin==origin_airport,'Origin_Lat'].values[0]
or_long = df.loc[df.Origin==origin_airport,'Origin_Long'].values[0]
de_lat = -df.loc[df.Origin==destination_airport,'Origin_Lat'].values[0]
de_long = df.loc[df.Origin==destination_airport,'Origin_Long'].values[0]

#Distance Calculator
def haversine_distance(or_lat, or_long, de_lat, de_long):
   r = 6371
   phi1 = np.radians(or_lat)
   phi2 = np.radians(de_lat)
   delta_phi = np.radians(de_lat - or_lat)
   delta_lambda = np.radians(de_long - or_long)
   a = np.sin(delta_phi / 2)**2 + np.cos(phi1) * np.cos(phi2) *   np.sin(delta_lambda / 2)**2
   res = r * (2 * np.arctan2(np.sqrt(a), np.sqrt(1 - a)))
   return np.round(res, 2)

#Convert to miles
km = haversine_distance(or_lat, or_long, de_lat, de_long)
mi = km * 0.62137

#Observations
number_coupons = 1
miles = mi
origin_lat = or_lat
origin_long = or_long
destination_lat = de_lat
destination_long = de_long

new_obs = [[number_coupons, miles, origin_lat, origin_long, destination_lat, destination_long]]

fare = my_prod_model.predict(new_obs)

}